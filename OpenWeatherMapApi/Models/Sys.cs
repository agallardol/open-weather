// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OpenWeatherMapApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Sys
    /// </summary>
    public partial class Sys
    {
        /// <summary>
        /// Initializes a new instance of the Sys class.
        /// </summary>
        public Sys()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Sys class.
        /// </summary>
        /// <param name="type">Internal parameter</param>
        /// <param name="id">Internal parameter</param>
        /// <param name="message">Internal parameter</param>
        /// <param name="country">Country code (GB, JP etc.)</param>
        /// <param name="sunrise">Sunrise time, unix, UTC</param>
        /// <param name="sunset">Sunset time, unix, UTC</param>
        public Sys(int? type = default(int?), int? id = default(int?), double? message = default(double?), string country = default(string), int? sunrise = default(int?), int? sunset = default(int?))
        {
            Type = type;
            Id = id;
            Message = message;
            Country = country;
            Sunrise = sunrise;
            Sunset = sunset;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets internal parameter
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public int? Type { get; set; }

        /// <summary>
        /// Gets or sets internal parameter
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or sets internal parameter
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public double? Message { get; set; }

        /// <summary>
        /// Gets or sets country code (GB, JP etc.)
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets sunrise time, unix, UTC
        /// </summary>
        [JsonProperty(PropertyName = "sunrise")]
        public int? Sunrise { get; set; }

        /// <summary>
        /// Gets or sets sunset time, unix, UTC
        /// </summary>
        [JsonProperty(PropertyName = "sunset")]
        public int? Sunset { get; set; }

    }
}
