// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OpenWeatherMapApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Successful response
    /// </summary>
    public partial class WeatherData
    {
        /// <summary>
        /// Initializes a new instance of the TwoZeroZero class.
        /// </summary>
        public WeatherData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TwoZeroZero class.
        /// </summary>
        /// <param name="weather">(more info Weather condition codes)</param>
        /// <param name="baseProperty">Internal parameter</param>
        /// <param name="visibility">Visibility, meter</param>
        /// <param name="dt">Time of data calculation, unix, UTC</param>
        /// <param name="id">City ID</param>
        /// <param name="cod">Internal parameter</param>
        public WeatherData(Coord coord = default(Coord), IList<Weather> weather = default(IList<Weather>), string baseProperty = default(string), Main main = default(Main), int? visibility = default(int?), Wind wind = default(Wind), Clouds clouds = default(Clouds), int? dt = default(int?), Sys sys = default(Sys), int? id = default(int?), string name = default(string), int? cod = default(int?))
        {
            Coord = coord;
            Weather = weather;
            BaseProperty = baseProperty;
            Main = main;
            Visibility = visibility;
            Wind = wind;
            Clouds = clouds;
            Dt = dt;
            Sys = sys;
            Id = id;
            Name = name;
            Cod = cod;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "coord")]
        public Coord Coord { get; set; }

        /// <summary>
        /// Gets or sets (more info Weather condition codes)
        /// </summary>
        [JsonProperty(PropertyName = "weather")]
        public IList<Weather> Weather { get; set; }

        /// <summary>
        /// Gets or sets internal parameter
        /// </summary>
        [JsonProperty(PropertyName = "base")]
        public string BaseProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "main")]
        public Main Main { get; set; }

        /// <summary>
        /// Gets or sets visibility, meter
        /// </summary>
        [JsonProperty(PropertyName = "visibility")]
        public int? Visibility { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "wind")]
        public Wind Wind { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clouds")]
        public Clouds Clouds { get; set; }

        /// <summary>
        /// Gets or sets time of data calculation, unix, UTC
        /// </summary>
        [JsonProperty(PropertyName = "dt")]
        public int? Dt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sys")]
        public Sys Sys { get; set; }

        /// <summary>
        /// Gets or sets city ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets internal parameter
        /// </summary>
        [JsonProperty(PropertyName = "cod")]
        public int? Cod { get; set; }

    }
}
